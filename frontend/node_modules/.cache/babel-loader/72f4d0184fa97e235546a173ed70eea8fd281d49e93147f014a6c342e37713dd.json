{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nimport { logout } from '../store/slices/authSlice';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor\napi.interceptors.request.use(config => {\n  const token = store.getState().auth.token;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    store.dispatch(logout());\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  getProfile: () => api.get('/auth/me')\n};\n\n// Students API\nexport const studentsAPI = {\n  getAll: params => api.get('/students', {\n    params\n  }),\n  getById: id => api.get(`/students/${id}`),\n  create: data => api.post('/students', data),\n  update: (id, data) => api.put(`/students/${id}`, data),\n  delete: id => api.delete(`/students/${id}`),\n  bulkUpload: file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/students/bulk-upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};\n\n// Vaccination Drives API\nexport const vaccinationDrivesAPI = {\n  getAll: params => api.get('/vaccination-drives', {\n    params\n  }),\n  getById: id => api.get(`/vaccination-drives/${id}`),\n  create: data => api.post('/vaccination-drives', data),\n  update: (id, data) => api.put(`/vaccination-drives/${id}`, data),\n  markVaccinated: (id, data) => api.post(`/vaccination-drives/${id}/mark-vaccinated`, data)\n};\n\n// Reports API\nexport const reportsAPI = {\n  getVaccinationStatus: params => api.get('/reports/vaccination-status', {\n    params\n  }),\n  getDriveSummary: params => api.get('/reports/drive-summary', {\n    params\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","store","logout","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","getState","auth","Authorization","error","Promise","reject","response","_error$response","status","dispatch","authAPI","login","credentials","post","register","userData","getProfile","get","studentsAPI","getAll","params","getById","id","data","update","put","delete","bulkUpload","file","formData","FormData","append","vaccinationDrivesAPI","markVaccinated","reportsAPI","getVaccinationStatus","getDriveSummary"],"sources":["C:/Users/Admin/Downloads/school-vaccination-tracker/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport store from '../store';\r\nimport { logout } from '../store/slices/authSlice';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = store.getState().auth.token;\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      store.dispatch(logout());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  getProfile: () => api.get('/auth/me'),\r\n};\r\n\r\n// Students API\r\nexport const studentsAPI = {\r\n  getAll: (params) => api.get('/students', { params }),\r\n  getById: (id) => api.get(`/students/${id}`),\r\n  create: (data) => api.post('/students', data),\r\n  update: (id, data) => api.put(`/students/${id}`, data),\r\n  delete: (id) => api.delete(`/students/${id}`),\r\n  bulkUpload: (file) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    return api.post('/students/bulk-upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\n// Vaccination Drives API\r\nexport const vaccinationDrivesAPI = {\r\n  getAll: (params) => api.get('/vaccination-drives', { params }),\r\n  getById: (id) => api.get(`/vaccination-drives/${id}`),\r\n  create: (data) => api.post('/vaccination-drives', data),\r\n  update: (id, data) => api.put(`/vaccination-drives/${id}`, data),\r\n  markVaccinated: (id, data) =>\r\n    api.post(`/vaccination-drives/${id}/mark-vaccinated`, data),\r\n};\r\n\r\n// Reports API\r\nexport const reportsAPI = {\r\n  getVaccinationStatus: (params) =>\r\n    api.get('/reports/vaccination-status', { params }),\r\n  getDriveSummary: (params) => api.get('/reports/drive-summary', { params }),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}